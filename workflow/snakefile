import sys
from glob import glob
from re import sub
from os.path import basename

def link_files(files):

  for file_name in files:
    sample = os.path.basename(file_name)
    file_exists = os.path.isfile(sample)

    if not file_exists:
      print("Creating symlink for:", sample, sep = " ", flush = True)
      os.symlink(src = file_name, dst = sample)
  None


configfile: "config/config.yaml"

database = config["database"]
sample_dir = config["sample_dir"]
outdir = config["outdir"]

threshold_id = config["threshold_id"]
threshold_cov = config["threshold_cov"]

debug = config["debug"]

mates = glob(pathname = "%s/*.fastq.gz" %sample_dir)

samples = {sub("_R\d[_\d+]*.fastq.gz", "", fn) for fn in [basename(mt) for mt in mates]}

if len(samples) < 1:
	sys.exit("fastq.gz files are missing!")

kma_threads = workflow.cores

species = basename(database).replace("_", " ") #

rule all:
	input:
		serovar = "%s/Results/serovar.tsv" %outdir

include: "rules/detect_serovars.smk"
include: "rules/summarise_serovars.smk"
