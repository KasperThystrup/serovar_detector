import sys
import csv
from copy import deepcopy
from glob import glob
from re import sub
from os.path import basename

configfile: "config/config.yaml"

database = config["database"]
assembly_dir = config["assembly_dir"]
reads_dir = config["reads_dir"]
outdir = config["outdir"]

threshold = config["threshold"]

debug = config["debug"]

if reads_dir is not None:
	mates = glob(pathname = "%s/*.fastq.gz" %reads_dir)
else:
	reads_dir = list()
	mates = list()

if assembly_dir is not None:
	assemblies = glob(pathname = "%s/*.fasta" %assembly_dir)
else:
	assembly_dir = list()
	assemblies = list()

sample_reads = {sub("_R\d[_\d+]*.fastq.gz", "", fn) for fn in [basename(mt) for mt in mates]}
sample_assemblies = {sub(".fasta", "", fn) for fn in [basename(ass) for ass in assemblies]}

#species = basename(database).replace("_", " ") #

metadata_file = "%s/metadata.tsv" %outdir

rule all:
	input:
		serovar = "%s/serovar.tsv" %outdir




rule metadata:
	priority:
		1
	output:
		metadata_file
	run:
		sample_list = ["Sample"] + list(sample_reads, sample_assemblies)
		with open(metadata_file, "w", newline = "\n") as meta_file:
			meta_output = csv.writer(meta_file, delimiter = "\t")
			for line in sample_list:
				meta_output.writerow([line])



include: "rules/detect_serovars.smk"
include: "rules/summarise_serovars.smk"
